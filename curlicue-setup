#!/bin/sh

url_encode() {
    string="$1"
    while [ "$string" ]; do
        case "$string" in
            [A-Za-z0-9._~-]*) printf '%c' "$string";;
            *) printf '%%%X' "'$string";;
        esac
        string="${string#?}"
    done
    echo
}

if [ $# = 4 ]; then
    request_token_url="$1"
    authorize_url="$2"
    access_token_url="$3"
    output_file="$4"
else
    echo "usage: $0 REQ_TOKEN_URL AUTHORIZE_URL ACCESS_TOKEN_URL OUTPUT_FILE"
    exit 2
fi

consumer_tmp=$(mktemp -t curlicue_consumer.XXXXXX)
request_token_tmp=$(mktemp -t curlicue_request_token.XXXXXX)
access_token_tmp=$(mktemp -t curlicue_access_token.XXXXXX)

read -p 'Consumer key: ' key
read -p 'Consumer secret: ' secret
oack="oauth_consumer_key=$(url_encode "$key")"
oacs="oauth_consumer_secret=$(url_encode "$secret")"
echo "$oack&$oacs" > $consumer_tmp

curlicue -f $consumer_tmp -p 'oauth_callback=oob' -- \
    -s -d '' "$request_token_url" > $request_token_tmp

echo -n 'Load this URL: '
curlicue -f $consumer_tmp -f $request_token_tmp -e "$authorize_url"
read -p 'Paste the PIN you got here: ' pin

curlicue -f $consumer_tmp -f $request_token_tmp \
    ${pin:+-p "oauth_verifier=$pin"} -- \
    -s -d '' "$access_token_url" > $access_token_tmp

paste -d '&' $consumer_tmp $access_token_tmp > "$output_file"
echo "OK! Now you can run: curlicue -f $output_file [-- CURL_OPTS] URL"
